Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    MAIN

Grammar

Rule 0     S' -> program
Rule 1     program -> DEF IDENT LPAREN RPAREN block
Rule 2     block -> LBRACE stmts RBRACE
Rule 3     stmts -> stmtstar
Rule 4     stmtstar -> <empty>
Rule 5     stmtstar -> stmtstar stmt
Rule 6     stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON
Rule 7     stmt -> CONTINUE SEMICOLON
Rule 8     stmt -> BREAK SEMICOLON
Rule 9     stmt -> PRINT LPAREN expr RPAREN SEMICOLON
Rule 10    stmt -> IDENT EQUALS expr SEMICOLON
Rule 11    stmt -> IF LPAREN expr RPAREN block
Rule 12    stmt -> IF LPAREN expr RPAREN block ELSE block
Rule 13    stmt -> WHILE LPAREN expr RPAREN block
Rule 14    expr -> NUMBER
Rule 15    expr -> TRUE
Rule 16    expr -> FALSE
Rule 17    expr -> IDENT
Rule 18    expr -> TILDE expr
Rule 19    expr -> MINUS expr
Rule 20    expr -> BANG expr
Rule 21    expr -> LPAREN expr RPAREN
Rule 22    expr -> expr ANDAND expr
Rule 23    expr -> expr PLUS expr
Rule 24    expr -> expr OROR expr
Rule 25    expr -> expr MINUS expr
Rule 26    expr -> expr TIMES expr
Rule 27    expr -> expr DIVIDE expr
Rule 28    expr -> expr EQUALSEQUALS expr
Rule 29    expr -> expr MOD expr
Rule 30    expr -> expr XOR expr
Rule 31    expr -> expr AND expr
Rule 32    expr -> expr OR expr
Rule 33    expr -> expr LSHIFT expr
Rule 34    expr -> expr RSHIFT expr
Rule 35    expr -> expr LESSTHAN expr
Rule 36    expr -> expr GREATERTHAN expr
Rule 37    expr -> expr LESSTHANEQUALS expr
Rule 38    expr -> expr GREATERTHANEQUALS expr
Rule 39    expr -> expr NOTEQUALS expr

Terminals, with rules where they appear

AND                  : 31
ANDAND               : 22
BANG                 : 20
BREAK                : 8
COLON                : 6
COMMENT              : 
CONTINUE             : 7
DEF                  : 1
DIVIDE               : 27
ELSE                 : 12
EQUALS               : 6 10
EQUALSEQUALS         : 28
FALSE                : 16
GREATERTHAN          : 36
GREATERTHANEQUALS    : 38
IDENT                : 1 6 10 17
IF                   : 11 12
INT                  : 6
LBRACE               : 2
LESSTHAN             : 35
LESSTHANEQUALS       : 37
LPAREN               : 1 9 11 12 13 21
LSHIFT               : 33
MAIN                 : 
MINUS                : 19 25
MOD                  : 29
NOTEQUALS            : 39
NUMBER               : 14
OR                   : 32
OROR                 : 24
PLUS                 : 23
PRINT                : 9
RBRACE               : 2
RPAREN               : 1 9 11 12 13 21
RSHIFT               : 34
SEMICOLON            : 6 7 8 9 10
TILDE                : 18
TIMES                : 26
TRUE                 : 15
VAR                  : 6
WHILE                : 13
XOR                  : 30
error                : 

Nonterminals, with rules where they appear

block                : 1 11 12 12 13
expr                 : 6 9 10 11 12 13 18 19 20 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39
program              : 0
stmt                 : 5
stmts                : 2
stmtstar             : 3 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . DEF IDENT LPAREN RPAREN block

    DEF             shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> DEF . IDENT LPAREN RPAREN block

    IDENT           shift and go to state 3


state 3

    (1) program -> DEF IDENT . LPAREN RPAREN block

    LPAREN          shift and go to state 4


state 4

    (1) program -> DEF IDENT LPAREN . RPAREN block

    RPAREN          shift and go to state 5


state 5

    (1) program -> DEF IDENT LPAREN RPAREN . block
    (2) block -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 7

    block                          shift and go to state 6

state 6

    (1) program -> DEF IDENT LPAREN RPAREN block .

    $end            reduce using rule 1 (program -> DEF IDENT LPAREN RPAREN block .)


state 7

    (2) block -> LBRACE . stmts RBRACE
    (3) stmts -> . stmtstar
    (4) stmtstar -> .
    (5) stmtstar -> . stmtstar stmt

    VAR             reduce using rule 4 (stmtstar -> .)
    CONTINUE        reduce using rule 4 (stmtstar -> .)
    BREAK           reduce using rule 4 (stmtstar -> .)
    PRINT           reduce using rule 4 (stmtstar -> .)
    IDENT           reduce using rule 4 (stmtstar -> .)
    IF              reduce using rule 4 (stmtstar -> .)
    WHILE           reduce using rule 4 (stmtstar -> .)
    RBRACE          reduce using rule 4 (stmtstar -> .)

    stmts                          shift and go to state 8
    stmtstar                       shift and go to state 9

state 8

    (2) block -> LBRACE stmts . RBRACE

    RBRACE          shift and go to state 10


state 9

    (3) stmts -> stmtstar .
    (5) stmtstar -> stmtstar . stmt
    (6) stmt -> . VAR IDENT EQUALS expr COLON INT SEMICOLON
    (7) stmt -> . CONTINUE SEMICOLON
    (8) stmt -> . BREAK SEMICOLON
    (9) stmt -> . PRINT LPAREN expr RPAREN SEMICOLON
    (10) stmt -> . IDENT EQUALS expr SEMICOLON
    (11) stmt -> . IF LPAREN expr RPAREN block
    (12) stmt -> . IF LPAREN expr RPAREN block ELSE block
    (13) stmt -> . WHILE LPAREN expr RPAREN block

    RBRACE          reduce using rule 3 (stmts -> stmtstar .)
    VAR             shift and go to state 12
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    PRINT           shift and go to state 16
    IDENT           shift and go to state 13
    IF              shift and go to state 17
    WHILE           shift and go to state 18

    stmt                           shift and go to state 11

state 10

    (2) block -> LBRACE stmts RBRACE .

    $end            reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    ELSE            reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    VAR             reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    CONTINUE        reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    BREAK           reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    PRINT           reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    IDENT           reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    IF              reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    WHILE           reduce using rule 2 (block -> LBRACE stmts RBRACE .)
    RBRACE          reduce using rule 2 (block -> LBRACE stmts RBRACE .)


state 11

    (5) stmtstar -> stmtstar stmt .

    VAR             reduce using rule 5 (stmtstar -> stmtstar stmt .)
    CONTINUE        reduce using rule 5 (stmtstar -> stmtstar stmt .)
    BREAK           reduce using rule 5 (stmtstar -> stmtstar stmt .)
    PRINT           reduce using rule 5 (stmtstar -> stmtstar stmt .)
    IDENT           reduce using rule 5 (stmtstar -> stmtstar stmt .)
    IF              reduce using rule 5 (stmtstar -> stmtstar stmt .)
    WHILE           reduce using rule 5 (stmtstar -> stmtstar stmt .)
    RBRACE          reduce using rule 5 (stmtstar -> stmtstar stmt .)


state 12

    (6) stmt -> VAR . IDENT EQUALS expr COLON INT SEMICOLON

    IDENT           shift and go to state 19


state 13

    (10) stmt -> IDENT . EQUALS expr SEMICOLON

    EQUALS          shift and go to state 20


state 14

    (7) stmt -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 21


state 15

    (8) stmt -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 22


state 16

    (9) stmt -> PRINT . LPAREN expr RPAREN SEMICOLON

    LPAREN          shift and go to state 23


state 17

    (11) stmt -> IF . LPAREN expr RPAREN block
    (12) stmt -> IF . LPAREN expr RPAREN block ELSE block

    LPAREN          shift and go to state 24


state 18

    (13) stmt -> WHILE . LPAREN expr RPAREN block

    LPAREN          shift and go to state 25


state 19

    (6) stmt -> VAR IDENT . EQUALS expr COLON INT SEMICOLON

    EQUALS          shift and go to state 26


state 20

    (10) stmt -> IDENT EQUALS . expr SEMICOLON
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 28

state 21

    (7) stmt -> CONTINUE SEMICOLON .

    VAR             reduce using rule 7 (stmt -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 7 (stmt -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 7 (stmt -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 7 (stmt -> CONTINUE SEMICOLON .)
    IDENT           reduce using rule 7 (stmt -> CONTINUE SEMICOLON .)
    IF              reduce using rule 7 (stmt -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 7 (stmt -> CONTINUE SEMICOLON .)
    RBRACE          reduce using rule 7 (stmt -> CONTINUE SEMICOLON .)


state 22

    (8) stmt -> BREAK SEMICOLON .

    VAR             reduce using rule 8 (stmt -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 8 (stmt -> BREAK SEMICOLON .)
    BREAK           reduce using rule 8 (stmt -> BREAK SEMICOLON .)
    PRINT           reduce using rule 8 (stmt -> BREAK SEMICOLON .)
    IDENT           reduce using rule 8 (stmt -> BREAK SEMICOLON .)
    IF              reduce using rule 8 (stmt -> BREAK SEMICOLON .)
    WHILE           reduce using rule 8 (stmt -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 8 (stmt -> BREAK SEMICOLON .)


state 23

    (9) stmt -> PRINT LPAREN . expr RPAREN SEMICOLON
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 36

state 24

    (11) stmt -> IF LPAREN . expr RPAREN block
    (12) stmt -> IF LPAREN . expr RPAREN block ELSE block
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 37

state 25

    (13) stmt -> WHILE LPAREN . expr RPAREN block
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 38

state 26

    (6) stmt -> VAR IDENT EQUALS . expr COLON INT SEMICOLON
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 39

state 27

    (17) expr -> IDENT .

    SEMICOLON       reduce using rule 17 (expr -> IDENT .)
    ANDAND          reduce using rule 17 (expr -> IDENT .)
    PLUS            reduce using rule 17 (expr -> IDENT .)
    OROR            reduce using rule 17 (expr -> IDENT .)
    MINUS           reduce using rule 17 (expr -> IDENT .)
    TIMES           reduce using rule 17 (expr -> IDENT .)
    DIVIDE          reduce using rule 17 (expr -> IDENT .)
    EQUALSEQUALS    reduce using rule 17 (expr -> IDENT .)
    MOD             reduce using rule 17 (expr -> IDENT .)
    XOR             reduce using rule 17 (expr -> IDENT .)
    AND             reduce using rule 17 (expr -> IDENT .)
    OR              reduce using rule 17 (expr -> IDENT .)
    LSHIFT          reduce using rule 17 (expr -> IDENT .)
    RSHIFT          reduce using rule 17 (expr -> IDENT .)
    LESSTHAN        reduce using rule 17 (expr -> IDENT .)
    GREATERTHAN     reduce using rule 17 (expr -> IDENT .)
    LESSTHANEQUALS  reduce using rule 17 (expr -> IDENT .)
    GREATERTHANEQUALS reduce using rule 17 (expr -> IDENT .)
    NOTEQUALS       reduce using rule 17 (expr -> IDENT .)
    RPAREN          reduce using rule 17 (expr -> IDENT .)
    COLON           reduce using rule 17 (expr -> IDENT .)


state 28

    (10) stmt -> IDENT EQUALS expr . SEMICOLON
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       shift and go to state 40
    ANDAND          shift and go to state 41
    PLUS            shift and go to state 42
    OROR            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58


state 29

    (14) expr -> NUMBER .

    SEMICOLON       reduce using rule 14 (expr -> NUMBER .)
    ANDAND          reduce using rule 14 (expr -> NUMBER .)
    PLUS            reduce using rule 14 (expr -> NUMBER .)
    OROR            reduce using rule 14 (expr -> NUMBER .)
    MINUS           reduce using rule 14 (expr -> NUMBER .)
    TIMES           reduce using rule 14 (expr -> NUMBER .)
    DIVIDE          reduce using rule 14 (expr -> NUMBER .)
    EQUALSEQUALS    reduce using rule 14 (expr -> NUMBER .)
    MOD             reduce using rule 14 (expr -> NUMBER .)
    XOR             reduce using rule 14 (expr -> NUMBER .)
    AND             reduce using rule 14 (expr -> NUMBER .)
    OR              reduce using rule 14 (expr -> NUMBER .)
    LSHIFT          reduce using rule 14 (expr -> NUMBER .)
    RSHIFT          reduce using rule 14 (expr -> NUMBER .)
    LESSTHAN        reduce using rule 14 (expr -> NUMBER .)
    GREATERTHAN     reduce using rule 14 (expr -> NUMBER .)
    LESSTHANEQUALS  reduce using rule 14 (expr -> NUMBER .)
    GREATERTHANEQUALS reduce using rule 14 (expr -> NUMBER .)
    NOTEQUALS       reduce using rule 14 (expr -> NUMBER .)
    RPAREN          reduce using rule 14 (expr -> NUMBER .)
    COLON           reduce using rule 14 (expr -> NUMBER .)


state 30

    (15) expr -> TRUE .

    SEMICOLON       reduce using rule 15 (expr -> TRUE .)
    ANDAND          reduce using rule 15 (expr -> TRUE .)
    PLUS            reduce using rule 15 (expr -> TRUE .)
    OROR            reduce using rule 15 (expr -> TRUE .)
    MINUS           reduce using rule 15 (expr -> TRUE .)
    TIMES           reduce using rule 15 (expr -> TRUE .)
    DIVIDE          reduce using rule 15 (expr -> TRUE .)
    EQUALSEQUALS    reduce using rule 15 (expr -> TRUE .)
    MOD             reduce using rule 15 (expr -> TRUE .)
    XOR             reduce using rule 15 (expr -> TRUE .)
    AND             reduce using rule 15 (expr -> TRUE .)
    OR              reduce using rule 15 (expr -> TRUE .)
    LSHIFT          reduce using rule 15 (expr -> TRUE .)
    RSHIFT          reduce using rule 15 (expr -> TRUE .)
    LESSTHAN        reduce using rule 15 (expr -> TRUE .)
    GREATERTHAN     reduce using rule 15 (expr -> TRUE .)
    LESSTHANEQUALS  reduce using rule 15 (expr -> TRUE .)
    GREATERTHANEQUALS reduce using rule 15 (expr -> TRUE .)
    NOTEQUALS       reduce using rule 15 (expr -> TRUE .)
    RPAREN          reduce using rule 15 (expr -> TRUE .)
    COLON           reduce using rule 15 (expr -> TRUE .)


state 31

    (16) expr -> FALSE .

    SEMICOLON       reduce using rule 16 (expr -> FALSE .)
    ANDAND          reduce using rule 16 (expr -> FALSE .)
    PLUS            reduce using rule 16 (expr -> FALSE .)
    OROR            reduce using rule 16 (expr -> FALSE .)
    MINUS           reduce using rule 16 (expr -> FALSE .)
    TIMES           reduce using rule 16 (expr -> FALSE .)
    DIVIDE          reduce using rule 16 (expr -> FALSE .)
    EQUALSEQUALS    reduce using rule 16 (expr -> FALSE .)
    MOD             reduce using rule 16 (expr -> FALSE .)
    XOR             reduce using rule 16 (expr -> FALSE .)
    AND             reduce using rule 16 (expr -> FALSE .)
    OR              reduce using rule 16 (expr -> FALSE .)
    LSHIFT          reduce using rule 16 (expr -> FALSE .)
    RSHIFT          reduce using rule 16 (expr -> FALSE .)
    LESSTHAN        reduce using rule 16 (expr -> FALSE .)
    GREATERTHAN     reduce using rule 16 (expr -> FALSE .)
    LESSTHANEQUALS  reduce using rule 16 (expr -> FALSE .)
    GREATERTHANEQUALS reduce using rule 16 (expr -> FALSE .)
    NOTEQUALS       reduce using rule 16 (expr -> FALSE .)
    RPAREN          reduce using rule 16 (expr -> FALSE .)
    COLON           reduce using rule 16 (expr -> FALSE .)


state 32

    (18) expr -> TILDE . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 59

state 33

    (19) expr -> MINUS . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 60

state 34

    (20) expr -> BANG . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 61

state 35

    (21) expr -> LPAREN . expr RPAREN
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 62

state 36

    (9) stmt -> PRINT LPAREN expr . RPAREN SEMICOLON
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    RPAREN          shift and go to state 63
    ANDAND          shift and go to state 41
    PLUS            shift and go to state 42
    OROR            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58


state 37

    (11) stmt -> IF LPAREN expr . RPAREN block
    (12) stmt -> IF LPAREN expr . RPAREN block ELSE block
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    RPAREN          shift and go to state 64
    ANDAND          shift and go to state 41
    PLUS            shift and go to state 42
    OROR            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58


state 38

    (13) stmt -> WHILE LPAREN expr . RPAREN block
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    RPAREN          shift and go to state 65
    ANDAND          shift and go to state 41
    PLUS            shift and go to state 42
    OROR            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58


state 39

    (6) stmt -> VAR IDENT EQUALS expr . COLON INT SEMICOLON
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    COLON           shift and go to state 66
    ANDAND          shift and go to state 41
    PLUS            shift and go to state 42
    OROR            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58


state 40

    (10) stmt -> IDENT EQUALS expr SEMICOLON .

    VAR             reduce using rule 10 (stmt -> IDENT EQUALS expr SEMICOLON .)
    CONTINUE        reduce using rule 10 (stmt -> IDENT EQUALS expr SEMICOLON .)
    BREAK           reduce using rule 10 (stmt -> IDENT EQUALS expr SEMICOLON .)
    PRINT           reduce using rule 10 (stmt -> IDENT EQUALS expr SEMICOLON .)
    IDENT           reduce using rule 10 (stmt -> IDENT EQUALS expr SEMICOLON .)
    IF              reduce using rule 10 (stmt -> IDENT EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 10 (stmt -> IDENT EQUALS expr SEMICOLON .)
    RBRACE          reduce using rule 10 (stmt -> IDENT EQUALS expr SEMICOLON .)


state 41

    (22) expr -> expr ANDAND . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 67

state 42

    (23) expr -> expr PLUS . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 68

state 43

    (24) expr -> expr OROR . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 69

state 44

    (25) expr -> expr MINUS . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 70

state 45

    (26) expr -> expr TIMES . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 71

state 46

    (27) expr -> expr DIVIDE . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 72

state 47

    (28) expr -> expr EQUALSEQUALS . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 73

state 48

    (29) expr -> expr MOD . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 74

state 49

    (30) expr -> expr XOR . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 75

state 50

    (31) expr -> expr AND . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 76

state 51

    (32) expr -> expr OR . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 77

state 52

    (33) expr -> expr LSHIFT . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 78

state 53

    (34) expr -> expr RSHIFT . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 79

state 54

    (35) expr -> expr LESSTHAN . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 80

state 55

    (36) expr -> expr GREATERTHAN . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 81

state 56

    (37) expr -> expr LESSTHANEQUALS . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 82

state 57

    (38) expr -> expr GREATERTHANEQUALS . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 83

state 58

    (39) expr -> expr NOTEQUALS . expr
    (14) expr -> . NUMBER
    (15) expr -> . TRUE
    (16) expr -> . FALSE
    (17) expr -> . IDENT
    (18) expr -> . TILDE expr
    (19) expr -> . MINUS expr
    (20) expr -> . BANG expr
    (21) expr -> . LPAREN expr RPAREN
    (22) expr -> . expr ANDAND expr
    (23) expr -> . expr PLUS expr
    (24) expr -> . expr OROR expr
    (25) expr -> . expr MINUS expr
    (26) expr -> . expr TIMES expr
    (27) expr -> . expr DIVIDE expr
    (28) expr -> . expr EQUALSEQUALS expr
    (29) expr -> . expr MOD expr
    (30) expr -> . expr XOR expr
    (31) expr -> . expr AND expr
    (32) expr -> . expr OR expr
    (33) expr -> . expr LSHIFT expr
    (34) expr -> . expr RSHIFT expr
    (35) expr -> . expr LESSTHAN expr
    (36) expr -> . expr GREATERTHAN expr
    (37) expr -> . expr LESSTHANEQUALS expr
    (38) expr -> . expr GREATERTHANEQUALS expr
    (39) expr -> . expr NOTEQUALS expr

    NUMBER          shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    IDENT           shift and go to state 27
    TILDE           shift and go to state 32
    MINUS           shift and go to state 33
    BANG            shift and go to state 34
    LPAREN          shift and go to state 35

    expr                           shift and go to state 84

state 59

    (18) expr -> TILDE expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 18 (expr -> TILDE expr .)
    ANDAND          reduce using rule 18 (expr -> TILDE expr .)
    PLUS            reduce using rule 18 (expr -> TILDE expr .)
    OROR            reduce using rule 18 (expr -> TILDE expr .)
    MINUS           reduce using rule 18 (expr -> TILDE expr .)
    TIMES           reduce using rule 18 (expr -> TILDE expr .)
    DIVIDE          reduce using rule 18 (expr -> TILDE expr .)
    EQUALSEQUALS    reduce using rule 18 (expr -> TILDE expr .)
    MOD             reduce using rule 18 (expr -> TILDE expr .)
    XOR             reduce using rule 18 (expr -> TILDE expr .)
    AND             reduce using rule 18 (expr -> TILDE expr .)
    OR              reduce using rule 18 (expr -> TILDE expr .)
    LSHIFT          reduce using rule 18 (expr -> TILDE expr .)
    RSHIFT          reduce using rule 18 (expr -> TILDE expr .)
    LESSTHAN        reduce using rule 18 (expr -> TILDE expr .)
    GREATERTHAN     reduce using rule 18 (expr -> TILDE expr .)
    LESSTHANEQUALS  reduce using rule 18 (expr -> TILDE expr .)
    GREATERTHANEQUALS reduce using rule 18 (expr -> TILDE expr .)
    NOTEQUALS       reduce using rule 18 (expr -> TILDE expr .)
    RPAREN          reduce using rule 18 (expr -> TILDE expr .)
    COLON           reduce using rule 18 (expr -> TILDE expr .)

  ! ANDAND          [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 42 ]
  ! OROR            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 48 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 60

    (19) expr -> MINUS expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 19 (expr -> MINUS expr .)
    ANDAND          reduce using rule 19 (expr -> MINUS expr .)
    PLUS            reduce using rule 19 (expr -> MINUS expr .)
    OROR            reduce using rule 19 (expr -> MINUS expr .)
    MINUS           reduce using rule 19 (expr -> MINUS expr .)
    TIMES           reduce using rule 19 (expr -> MINUS expr .)
    DIVIDE          reduce using rule 19 (expr -> MINUS expr .)
    EQUALSEQUALS    reduce using rule 19 (expr -> MINUS expr .)
    MOD             reduce using rule 19 (expr -> MINUS expr .)
    XOR             reduce using rule 19 (expr -> MINUS expr .)
    AND             reduce using rule 19 (expr -> MINUS expr .)
    OR              reduce using rule 19 (expr -> MINUS expr .)
    LSHIFT          reduce using rule 19 (expr -> MINUS expr .)
    RSHIFT          reduce using rule 19 (expr -> MINUS expr .)
    LESSTHAN        reduce using rule 19 (expr -> MINUS expr .)
    GREATERTHAN     reduce using rule 19 (expr -> MINUS expr .)
    LESSTHANEQUALS  reduce using rule 19 (expr -> MINUS expr .)
    GREATERTHANEQUALS reduce using rule 19 (expr -> MINUS expr .)
    NOTEQUALS       reduce using rule 19 (expr -> MINUS expr .)
    RPAREN          reduce using rule 19 (expr -> MINUS expr .)
    COLON           reduce using rule 19 (expr -> MINUS expr .)

  ! ANDAND          [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 42 ]
  ! OROR            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 48 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 61

    (20) expr -> BANG expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 20 (expr -> BANG expr .)
    ANDAND          reduce using rule 20 (expr -> BANG expr .)
    PLUS            reduce using rule 20 (expr -> BANG expr .)
    OROR            reduce using rule 20 (expr -> BANG expr .)
    MINUS           reduce using rule 20 (expr -> BANG expr .)
    TIMES           reduce using rule 20 (expr -> BANG expr .)
    DIVIDE          reduce using rule 20 (expr -> BANG expr .)
    EQUALSEQUALS    reduce using rule 20 (expr -> BANG expr .)
    MOD             reduce using rule 20 (expr -> BANG expr .)
    XOR             reduce using rule 20 (expr -> BANG expr .)
    AND             reduce using rule 20 (expr -> BANG expr .)
    OR              reduce using rule 20 (expr -> BANG expr .)
    LSHIFT          reduce using rule 20 (expr -> BANG expr .)
    RSHIFT          reduce using rule 20 (expr -> BANG expr .)
    LESSTHAN        reduce using rule 20 (expr -> BANG expr .)
    GREATERTHAN     reduce using rule 20 (expr -> BANG expr .)
    LESSTHANEQUALS  reduce using rule 20 (expr -> BANG expr .)
    GREATERTHANEQUALS reduce using rule 20 (expr -> BANG expr .)
    NOTEQUALS       reduce using rule 20 (expr -> BANG expr .)
    RPAREN          reduce using rule 20 (expr -> BANG expr .)
    COLON           reduce using rule 20 (expr -> BANG expr .)

  ! ANDAND          [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 42 ]
  ! OROR            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 48 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 62

    (21) expr -> LPAREN expr . RPAREN
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    RPAREN          shift and go to state 85
    ANDAND          shift and go to state 41
    PLUS            shift and go to state 42
    OROR            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58


state 63

    (9) stmt -> PRINT LPAREN expr RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 86


state 64

    (11) stmt -> IF LPAREN expr RPAREN . block
    (12) stmt -> IF LPAREN expr RPAREN . block ELSE block
    (2) block -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 7

    block                          shift and go to state 87

state 65

    (13) stmt -> WHILE LPAREN expr RPAREN . block
    (2) block -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 7

    block                          shift and go to state 88

state 66

    (6) stmt -> VAR IDENT EQUALS expr COLON . INT SEMICOLON

    INT             shift and go to state 89


state 67

    (22) expr -> expr ANDAND expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 22 (expr -> expr ANDAND expr .)
    ANDAND          reduce using rule 22 (expr -> expr ANDAND expr .)
    OROR            reduce using rule 22 (expr -> expr ANDAND expr .)
    RPAREN          reduce using rule 22 (expr -> expr ANDAND expr .)
    COLON           reduce using rule 22 (expr -> expr ANDAND expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58

  ! PLUS            [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! MINUS           [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! TIMES           [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! DIVIDE          [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! EQUALSEQUALS    [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! MOD             [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! XOR             [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! AND             [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! OR              [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! LSHIFT          [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! RSHIFT          [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! LESSTHAN        [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! GREATERTHAN     [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! LESSTHANEQUALS  [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! GREATERTHANEQUALS [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! NOTEQUALS       [ reduce using rule 22 (expr -> expr ANDAND expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]


state 68

    (23) expr -> expr PLUS expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 23 (expr -> expr PLUS expr .)
    ANDAND          reduce using rule 23 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 23 (expr -> expr PLUS expr .)
    OROR            reduce using rule 23 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 23 (expr -> expr PLUS expr .)
    EQUALSEQUALS    reduce using rule 23 (expr -> expr PLUS expr .)
    XOR             reduce using rule 23 (expr -> expr PLUS expr .)
    AND             reduce using rule 23 (expr -> expr PLUS expr .)
    OR              reduce using rule 23 (expr -> expr PLUS expr .)
    LSHIFT          reduce using rule 23 (expr -> expr PLUS expr .)
    RSHIFT          reduce using rule 23 (expr -> expr PLUS expr .)
    LESSTHAN        reduce using rule 23 (expr -> expr PLUS expr .)
    GREATERTHAN     reduce using rule 23 (expr -> expr PLUS expr .)
    LESSTHANEQUALS  reduce using rule 23 (expr -> expr PLUS expr .)
    GREATERTHANEQUALS reduce using rule 23 (expr -> expr PLUS expr .)
    NOTEQUALS       reduce using rule 23 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 23 (expr -> expr PLUS expr .)
    COLON           reduce using rule 23 (expr -> expr PLUS expr .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48

  ! TIMES           [ reduce using rule 23 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 23 (expr -> expr PLUS expr .) ]
  ! MOD             [ reduce using rule 23 (expr -> expr PLUS expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 42 ]
  ! OROR            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 69

    (24) expr -> expr OROR expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 24 (expr -> expr OROR expr .)
    OROR            reduce using rule 24 (expr -> expr OROR expr .)
    RPAREN          reduce using rule 24 (expr -> expr OROR expr .)
    COLON           reduce using rule 24 (expr -> expr OROR expr .)
    ANDAND          shift and go to state 41
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58

  ! ANDAND          [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! PLUS            [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! MINUS           [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! TIMES           [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! DIVIDE          [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! EQUALSEQUALS    [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! MOD             [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! XOR             [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! AND             [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! OR              [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! LSHIFT          [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! RSHIFT          [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! LESSTHAN        [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! GREATERTHAN     [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! LESSTHANEQUALS  [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! GREATERTHANEQUALS [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! NOTEQUALS       [ reduce using rule 24 (expr -> expr OROR expr .) ]
  ! OROR            [ shift and go to state 43 ]


state 70

    (25) expr -> expr MINUS expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 25 (expr -> expr MINUS expr .)
    ANDAND          reduce using rule 25 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 25 (expr -> expr MINUS expr .)
    OROR            reduce using rule 25 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 25 (expr -> expr MINUS expr .)
    EQUALSEQUALS    reduce using rule 25 (expr -> expr MINUS expr .)
    XOR             reduce using rule 25 (expr -> expr MINUS expr .)
    AND             reduce using rule 25 (expr -> expr MINUS expr .)
    OR              reduce using rule 25 (expr -> expr MINUS expr .)
    LSHIFT          reduce using rule 25 (expr -> expr MINUS expr .)
    RSHIFT          reduce using rule 25 (expr -> expr MINUS expr .)
    LESSTHAN        reduce using rule 25 (expr -> expr MINUS expr .)
    GREATERTHAN     reduce using rule 25 (expr -> expr MINUS expr .)
    LESSTHANEQUALS  reduce using rule 25 (expr -> expr MINUS expr .)
    GREATERTHANEQUALS reduce using rule 25 (expr -> expr MINUS expr .)
    NOTEQUALS       reduce using rule 25 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 25 (expr -> expr MINUS expr .)
    COLON           reduce using rule 25 (expr -> expr MINUS expr .)
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48

  ! TIMES           [ reduce using rule 25 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 25 (expr -> expr MINUS expr .) ]
  ! MOD             [ reduce using rule 25 (expr -> expr MINUS expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 42 ]
  ! OROR            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 71

    (26) expr -> expr TIMES expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 26 (expr -> expr TIMES expr .)
    ANDAND          reduce using rule 26 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 26 (expr -> expr TIMES expr .)
    OROR            reduce using rule 26 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 26 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 26 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 26 (expr -> expr TIMES expr .)
    EQUALSEQUALS    reduce using rule 26 (expr -> expr TIMES expr .)
    MOD             reduce using rule 26 (expr -> expr TIMES expr .)
    XOR             reduce using rule 26 (expr -> expr TIMES expr .)
    AND             reduce using rule 26 (expr -> expr TIMES expr .)
    OR              reduce using rule 26 (expr -> expr TIMES expr .)
    LSHIFT          reduce using rule 26 (expr -> expr TIMES expr .)
    RSHIFT          reduce using rule 26 (expr -> expr TIMES expr .)
    LESSTHAN        reduce using rule 26 (expr -> expr TIMES expr .)
    GREATERTHAN     reduce using rule 26 (expr -> expr TIMES expr .)
    LESSTHANEQUALS  reduce using rule 26 (expr -> expr TIMES expr .)
    GREATERTHANEQUALS reduce using rule 26 (expr -> expr TIMES expr .)
    NOTEQUALS       reduce using rule 26 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 26 (expr -> expr TIMES expr .)
    COLON           reduce using rule 26 (expr -> expr TIMES expr .)

  ! ANDAND          [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 42 ]
  ! OROR            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 48 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 72

    (27) expr -> expr DIVIDE expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 27 (expr -> expr DIVIDE expr .)
    ANDAND          reduce using rule 27 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 27 (expr -> expr DIVIDE expr .)
    OROR            reduce using rule 27 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 27 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 27 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 27 (expr -> expr DIVIDE expr .)
    EQUALSEQUALS    reduce using rule 27 (expr -> expr DIVIDE expr .)
    MOD             reduce using rule 27 (expr -> expr DIVIDE expr .)
    XOR             reduce using rule 27 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 27 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 27 (expr -> expr DIVIDE expr .)
    LSHIFT          reduce using rule 27 (expr -> expr DIVIDE expr .)
    RSHIFT          reduce using rule 27 (expr -> expr DIVIDE expr .)
    LESSTHAN        reduce using rule 27 (expr -> expr DIVIDE expr .)
    GREATERTHAN     reduce using rule 27 (expr -> expr DIVIDE expr .)
    LESSTHANEQUALS  reduce using rule 27 (expr -> expr DIVIDE expr .)
    GREATERTHANEQUALS reduce using rule 27 (expr -> expr DIVIDE expr .)
    NOTEQUALS       reduce using rule 27 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 27 (expr -> expr DIVIDE expr .)
    COLON           reduce using rule 27 (expr -> expr DIVIDE expr .)

  ! ANDAND          [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 42 ]
  ! OROR            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 48 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 73

    (28) expr -> expr EQUALSEQUALS expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    ANDAND          reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    OROR            reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    EQUALSEQUALS    reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    XOR             reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    AND             reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    OR              reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    NOTEQUALS       reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    RPAREN          reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    COLON           reduce using rule 28 (expr -> expr EQUALSEQUALS expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57

  ! PLUS            [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! MINUS           [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! TIMES           [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! DIVIDE          [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! MOD             [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! LSHIFT          [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! RSHIFT          [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! LESSTHAN        [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! GREATERTHAN     [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! LESSTHANEQUALS  [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! GREATERTHANEQUALS [ reduce using rule 28 (expr -> expr EQUALSEQUALS expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 74

    (29) expr -> expr MOD expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 29 (expr -> expr MOD expr .)
    ANDAND          reduce using rule 29 (expr -> expr MOD expr .)
    PLUS            reduce using rule 29 (expr -> expr MOD expr .)
    OROR            reduce using rule 29 (expr -> expr MOD expr .)
    MINUS           reduce using rule 29 (expr -> expr MOD expr .)
    TIMES           reduce using rule 29 (expr -> expr MOD expr .)
    DIVIDE          reduce using rule 29 (expr -> expr MOD expr .)
    EQUALSEQUALS    reduce using rule 29 (expr -> expr MOD expr .)
    MOD             reduce using rule 29 (expr -> expr MOD expr .)
    XOR             reduce using rule 29 (expr -> expr MOD expr .)
    AND             reduce using rule 29 (expr -> expr MOD expr .)
    OR              reduce using rule 29 (expr -> expr MOD expr .)
    LSHIFT          reduce using rule 29 (expr -> expr MOD expr .)
    RSHIFT          reduce using rule 29 (expr -> expr MOD expr .)
    LESSTHAN        reduce using rule 29 (expr -> expr MOD expr .)
    GREATERTHAN     reduce using rule 29 (expr -> expr MOD expr .)
    LESSTHANEQUALS  reduce using rule 29 (expr -> expr MOD expr .)
    GREATERTHANEQUALS reduce using rule 29 (expr -> expr MOD expr .)
    NOTEQUALS       reduce using rule 29 (expr -> expr MOD expr .)
    RPAREN          reduce using rule 29 (expr -> expr MOD expr .)
    COLON           reduce using rule 29 (expr -> expr MOD expr .)

  ! ANDAND          [ shift and go to state 41 ]
  ! PLUS            [ shift and go to state 42 ]
  ! OROR            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 48 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 75

    (30) expr -> expr XOR expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 30 (expr -> expr XOR expr .)
    ANDAND          reduce using rule 30 (expr -> expr XOR expr .)
    OROR            reduce using rule 30 (expr -> expr XOR expr .)
    XOR             reduce using rule 30 (expr -> expr XOR expr .)
    OR              reduce using rule 30 (expr -> expr XOR expr .)
    RPAREN          reduce using rule 30 (expr -> expr XOR expr .)
    COLON           reduce using rule 30 (expr -> expr XOR expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    AND             shift and go to state 50
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58

  ! PLUS            [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! MINUS           [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! TIMES           [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! DIVIDE          [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! EQUALSEQUALS    [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! MOD             [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! AND             [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! LSHIFT          [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! RSHIFT          [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! LESSTHAN        [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! GREATERTHAN     [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! LESSTHANEQUALS  [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! GREATERTHANEQUALS [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! NOTEQUALS       [ reduce using rule 30 (expr -> expr XOR expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! XOR             [ shift and go to state 49 ]
  ! OR              [ shift and go to state 51 ]


state 76

    (31) expr -> expr AND expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 31 (expr -> expr AND expr .)
    ANDAND          reduce using rule 31 (expr -> expr AND expr .)
    OROR            reduce using rule 31 (expr -> expr AND expr .)
    XOR             reduce using rule 31 (expr -> expr AND expr .)
    AND             reduce using rule 31 (expr -> expr AND expr .)
    OR              reduce using rule 31 (expr -> expr AND expr .)
    RPAREN          reduce using rule 31 (expr -> expr AND expr .)
    COLON           reduce using rule 31 (expr -> expr AND expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58

  ! PLUS            [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! MINUS           [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! TIMES           [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! DIVIDE          [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! EQUALSEQUALS    [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! MOD             [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! LSHIFT          [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! RSHIFT          [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! LESSTHAN        [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! GREATERTHAN     [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! LESSTHANEQUALS  [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! GREATERTHANEQUALS [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! NOTEQUALS       [ reduce using rule 31 (expr -> expr AND expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 77

    (32) expr -> expr OR expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 32 (expr -> expr OR expr .)
    ANDAND          reduce using rule 32 (expr -> expr OR expr .)
    OROR            reduce using rule 32 (expr -> expr OR expr .)
    OR              reduce using rule 32 (expr -> expr OR expr .)
    RPAREN          reduce using rule 32 (expr -> expr OR expr .)
    COLON           reduce using rule 32 (expr -> expr OR expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    EQUALSEQUALS    shift and go to state 47
    MOD             shift and go to state 48
    XOR             shift and go to state 49
    AND             shift and go to state 50
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57
    NOTEQUALS       shift and go to state 58

  ! PLUS            [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! TIMES           [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! DIVIDE          [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! EQUALSEQUALS    [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! MOD             [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! XOR             [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! AND             [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! LSHIFT          [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! RSHIFT          [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! LESSTHAN        [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! GREATERTHAN     [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! LESSTHANEQUALS  [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! GREATERTHANEQUALS [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! NOTEQUALS       [ reduce using rule 32 (expr -> expr OR expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! OR              [ shift and go to state 51 ]


state 78

    (33) expr -> expr LSHIFT expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 33 (expr -> expr LSHIFT expr .)
    ANDAND          reduce using rule 33 (expr -> expr LSHIFT expr .)
    OROR            reduce using rule 33 (expr -> expr LSHIFT expr .)
    EQUALSEQUALS    reduce using rule 33 (expr -> expr LSHIFT expr .)
    XOR             reduce using rule 33 (expr -> expr LSHIFT expr .)
    AND             reduce using rule 33 (expr -> expr LSHIFT expr .)
    OR              reduce using rule 33 (expr -> expr LSHIFT expr .)
    LSHIFT          reduce using rule 33 (expr -> expr LSHIFT expr .)
    RSHIFT          reduce using rule 33 (expr -> expr LSHIFT expr .)
    LESSTHAN        reduce using rule 33 (expr -> expr LSHIFT expr .)
    GREATERTHAN     reduce using rule 33 (expr -> expr LSHIFT expr .)
    LESSTHANEQUALS  reduce using rule 33 (expr -> expr LSHIFT expr .)
    GREATERTHANEQUALS reduce using rule 33 (expr -> expr LSHIFT expr .)
    NOTEQUALS       reduce using rule 33 (expr -> expr LSHIFT expr .)
    RPAREN          reduce using rule 33 (expr -> expr LSHIFT expr .)
    COLON           reduce using rule 33 (expr -> expr LSHIFT expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48

  ! PLUS            [ reduce using rule 33 (expr -> expr LSHIFT expr .) ]
  ! MINUS           [ reduce using rule 33 (expr -> expr LSHIFT expr .) ]
  ! TIMES           [ reduce using rule 33 (expr -> expr LSHIFT expr .) ]
  ! DIVIDE          [ reduce using rule 33 (expr -> expr LSHIFT expr .) ]
  ! MOD             [ reduce using rule 33 (expr -> expr LSHIFT expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 79

    (34) expr -> expr RSHIFT expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 34 (expr -> expr RSHIFT expr .)
    ANDAND          reduce using rule 34 (expr -> expr RSHIFT expr .)
    OROR            reduce using rule 34 (expr -> expr RSHIFT expr .)
    EQUALSEQUALS    reduce using rule 34 (expr -> expr RSHIFT expr .)
    XOR             reduce using rule 34 (expr -> expr RSHIFT expr .)
    AND             reduce using rule 34 (expr -> expr RSHIFT expr .)
    OR              reduce using rule 34 (expr -> expr RSHIFT expr .)
    LSHIFT          reduce using rule 34 (expr -> expr RSHIFT expr .)
    RSHIFT          reduce using rule 34 (expr -> expr RSHIFT expr .)
    LESSTHAN        reduce using rule 34 (expr -> expr RSHIFT expr .)
    GREATERTHAN     reduce using rule 34 (expr -> expr RSHIFT expr .)
    LESSTHANEQUALS  reduce using rule 34 (expr -> expr RSHIFT expr .)
    GREATERTHANEQUALS reduce using rule 34 (expr -> expr RSHIFT expr .)
    NOTEQUALS       reduce using rule 34 (expr -> expr RSHIFT expr .)
    RPAREN          reduce using rule 34 (expr -> expr RSHIFT expr .)
    COLON           reduce using rule 34 (expr -> expr RSHIFT expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48

  ! PLUS            [ reduce using rule 34 (expr -> expr RSHIFT expr .) ]
  ! MINUS           [ reduce using rule 34 (expr -> expr RSHIFT expr .) ]
  ! TIMES           [ reduce using rule 34 (expr -> expr RSHIFT expr .) ]
  ! DIVIDE          [ reduce using rule 34 (expr -> expr RSHIFT expr .) ]
  ! MOD             [ reduce using rule 34 (expr -> expr RSHIFT expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LSHIFT          [ shift and go to state 52 ]
  ! RSHIFT          [ shift and go to state 53 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 80

    (35) expr -> expr LESSTHAN expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 35 (expr -> expr LESSTHAN expr .)
    ANDAND          reduce using rule 35 (expr -> expr LESSTHAN expr .)
    OROR            reduce using rule 35 (expr -> expr LESSTHAN expr .)
    EQUALSEQUALS    reduce using rule 35 (expr -> expr LESSTHAN expr .)
    XOR             reduce using rule 35 (expr -> expr LESSTHAN expr .)
    AND             reduce using rule 35 (expr -> expr LESSTHAN expr .)
    OR              reduce using rule 35 (expr -> expr LESSTHAN expr .)
    LESSTHAN        reduce using rule 35 (expr -> expr LESSTHAN expr .)
    GREATERTHAN     reduce using rule 35 (expr -> expr LESSTHAN expr .)
    LESSTHANEQUALS  reduce using rule 35 (expr -> expr LESSTHAN expr .)
    GREATERTHANEQUALS reduce using rule 35 (expr -> expr LESSTHAN expr .)
    NOTEQUALS       reduce using rule 35 (expr -> expr LESSTHAN expr .)
    RPAREN          reduce using rule 35 (expr -> expr LESSTHAN expr .)
    COLON           reduce using rule 35 (expr -> expr LESSTHAN expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53

  ! PLUS            [ reduce using rule 35 (expr -> expr LESSTHAN expr .) ]
  ! MINUS           [ reduce using rule 35 (expr -> expr LESSTHAN expr .) ]
  ! TIMES           [ reduce using rule 35 (expr -> expr LESSTHAN expr .) ]
  ! DIVIDE          [ reduce using rule 35 (expr -> expr LESSTHAN expr .) ]
  ! MOD             [ reduce using rule 35 (expr -> expr LESSTHAN expr .) ]
  ! LSHIFT          [ reduce using rule 35 (expr -> expr LESSTHAN expr .) ]
  ! RSHIFT          [ reduce using rule 35 (expr -> expr LESSTHAN expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 81

    (36) expr -> expr GREATERTHAN expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    ANDAND          reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    OROR            reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    EQUALSEQUALS    reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    XOR             reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    AND             reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    OR              reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    LESSTHAN        reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    GREATERTHAN     reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    LESSTHANEQUALS  reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    GREATERTHANEQUALS reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    NOTEQUALS       reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    RPAREN          reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    COLON           reduce using rule 36 (expr -> expr GREATERTHAN expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53

  ! PLUS            [ reduce using rule 36 (expr -> expr GREATERTHAN expr .) ]
  ! MINUS           [ reduce using rule 36 (expr -> expr GREATERTHAN expr .) ]
  ! TIMES           [ reduce using rule 36 (expr -> expr GREATERTHAN expr .) ]
  ! DIVIDE          [ reduce using rule 36 (expr -> expr GREATERTHAN expr .) ]
  ! MOD             [ reduce using rule 36 (expr -> expr GREATERTHAN expr .) ]
  ! LSHIFT          [ reduce using rule 36 (expr -> expr GREATERTHAN expr .) ]
  ! RSHIFT          [ reduce using rule 36 (expr -> expr GREATERTHAN expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 82

    (37) expr -> expr LESSTHANEQUALS expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    ANDAND          reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    OROR            reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    EQUALSEQUALS    reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    XOR             reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    AND             reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    OR              reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    LESSTHAN        reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    GREATERTHAN     reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    LESSTHANEQUALS  reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    GREATERTHANEQUALS reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    NOTEQUALS       reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    RPAREN          reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    COLON           reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53

  ! PLUS            [ reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .) ]
  ! MINUS           [ reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .) ]
  ! TIMES           [ reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .) ]
  ! DIVIDE          [ reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .) ]
  ! MOD             [ reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .) ]
  ! LSHIFT          [ reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .) ]
  ! RSHIFT          [ reduce using rule 37 (expr -> expr LESSTHANEQUALS expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 83

    (38) expr -> expr GREATERTHANEQUALS expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    ANDAND          reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    OROR            reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    EQUALSEQUALS    reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    XOR             reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    AND             reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    OR              reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    LESSTHAN        reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    GREATERTHAN     reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    LESSTHANEQUALS  reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    GREATERTHANEQUALS reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    NOTEQUALS       reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    RPAREN          reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    COLON           reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53

  ! PLUS            [ reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .) ]
  ! MINUS           [ reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .) ]
  ! TIMES           [ reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .) ]
  ! DIVIDE          [ reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .) ]
  ! MOD             [ reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .) ]
  ! LSHIFT          [ reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .) ]
  ! RSHIFT          [ reduce using rule 38 (expr -> expr GREATERTHANEQUALS expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! LESSTHAN        [ shift and go to state 54 ]
  ! GREATERTHAN     [ shift and go to state 55 ]
  ! LESSTHANEQUALS  [ shift and go to state 56 ]
  ! GREATERTHANEQUALS [ shift and go to state 57 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 84

    (39) expr -> expr NOTEQUALS expr .
    (22) expr -> expr . ANDAND expr
    (23) expr -> expr . PLUS expr
    (24) expr -> expr . OROR expr
    (25) expr -> expr . MINUS expr
    (26) expr -> expr . TIMES expr
    (27) expr -> expr . DIVIDE expr
    (28) expr -> expr . EQUALSEQUALS expr
    (29) expr -> expr . MOD expr
    (30) expr -> expr . XOR expr
    (31) expr -> expr . AND expr
    (32) expr -> expr . OR expr
    (33) expr -> expr . LSHIFT expr
    (34) expr -> expr . RSHIFT expr
    (35) expr -> expr . LESSTHAN expr
    (36) expr -> expr . GREATERTHAN expr
    (37) expr -> expr . LESSTHANEQUALS expr
    (38) expr -> expr . GREATERTHANEQUALS expr
    (39) expr -> expr . NOTEQUALS expr

    SEMICOLON       reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    ANDAND          reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    OROR            reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    EQUALSEQUALS    reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    XOR             reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    AND             reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    OR              reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    NOTEQUALS       reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    RPAREN          reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    COLON           reduce using rule 39 (expr -> expr NOTEQUALS expr .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    MOD             shift and go to state 48
    LSHIFT          shift and go to state 52
    RSHIFT          shift and go to state 53
    LESSTHAN        shift and go to state 54
    GREATERTHAN     shift and go to state 55
    LESSTHANEQUALS  shift and go to state 56
    GREATERTHANEQUALS shift and go to state 57

  ! PLUS            [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! MINUS           [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! TIMES           [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! DIVIDE          [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! MOD             [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! LSHIFT          [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! RSHIFT          [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! LESSTHAN        [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! GREATERTHAN     [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! LESSTHANEQUALS  [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! GREATERTHANEQUALS [ reduce using rule 39 (expr -> expr NOTEQUALS expr .) ]
  ! ANDAND          [ shift and go to state 41 ]
  ! OROR            [ shift and go to state 43 ]
  ! EQUALSEQUALS    [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! NOTEQUALS       [ shift and go to state 58 ]


state 85

    (21) expr -> LPAREN expr RPAREN .

    SEMICOLON       reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    ANDAND          reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    OROR            reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    EQUALSEQUALS    reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    MOD             reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    XOR             reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    LSHIFT          reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    RSHIFT          reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    LESSTHAN        reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    GREATERTHAN     reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    LESSTHANEQUALS  reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    GREATERTHANEQUALS reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    NOTEQUALS       reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 21 (expr -> LPAREN expr RPAREN .)
    COLON           reduce using rule 21 (expr -> LPAREN expr RPAREN .)


state 86

    (9) stmt -> PRINT LPAREN expr RPAREN SEMICOLON .

    VAR             reduce using rule 9 (stmt -> PRINT LPAREN expr RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 9 (stmt -> PRINT LPAREN expr RPAREN SEMICOLON .)
    BREAK           reduce using rule 9 (stmt -> PRINT LPAREN expr RPAREN SEMICOLON .)
    PRINT           reduce using rule 9 (stmt -> PRINT LPAREN expr RPAREN SEMICOLON .)
    IDENT           reduce using rule 9 (stmt -> PRINT LPAREN expr RPAREN SEMICOLON .)
    IF              reduce using rule 9 (stmt -> PRINT LPAREN expr RPAREN SEMICOLON .)
    WHILE           reduce using rule 9 (stmt -> PRINT LPAREN expr RPAREN SEMICOLON .)
    RBRACE          reduce using rule 9 (stmt -> PRINT LPAREN expr RPAREN SEMICOLON .)


state 87

    (11) stmt -> IF LPAREN expr RPAREN block .
    (12) stmt -> IF LPAREN expr RPAREN block . ELSE block

    VAR             reduce using rule 11 (stmt -> IF LPAREN expr RPAREN block .)
    CONTINUE        reduce using rule 11 (stmt -> IF LPAREN expr RPAREN block .)
    BREAK           reduce using rule 11 (stmt -> IF LPAREN expr RPAREN block .)
    PRINT           reduce using rule 11 (stmt -> IF LPAREN expr RPAREN block .)
    IDENT           reduce using rule 11 (stmt -> IF LPAREN expr RPAREN block .)
    IF              reduce using rule 11 (stmt -> IF LPAREN expr RPAREN block .)
    WHILE           reduce using rule 11 (stmt -> IF LPAREN expr RPAREN block .)
    RBRACE          reduce using rule 11 (stmt -> IF LPAREN expr RPAREN block .)
    ELSE            shift and go to state 90


state 88

    (13) stmt -> WHILE LPAREN expr RPAREN block .

    VAR             reduce using rule 13 (stmt -> WHILE LPAREN expr RPAREN block .)
    CONTINUE        reduce using rule 13 (stmt -> WHILE LPAREN expr RPAREN block .)
    BREAK           reduce using rule 13 (stmt -> WHILE LPAREN expr RPAREN block .)
    PRINT           reduce using rule 13 (stmt -> WHILE LPAREN expr RPAREN block .)
    IDENT           reduce using rule 13 (stmt -> WHILE LPAREN expr RPAREN block .)
    IF              reduce using rule 13 (stmt -> WHILE LPAREN expr RPAREN block .)
    WHILE           reduce using rule 13 (stmt -> WHILE LPAREN expr RPAREN block .)
    RBRACE          reduce using rule 13 (stmt -> WHILE LPAREN expr RPAREN block .)


state 89

    (6) stmt -> VAR IDENT EQUALS expr COLON INT . SEMICOLON

    SEMICOLON       shift and go to state 91


state 90

    (12) stmt -> IF LPAREN expr RPAREN block ELSE . block
    (2) block -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 7

    block                          shift and go to state 92

state 91

    (6) stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .

    VAR             reduce using rule 6 (stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .)
    CONTINUE        reduce using rule 6 (stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .)
    BREAK           reduce using rule 6 (stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .)
    PRINT           reduce using rule 6 (stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .)
    IDENT           reduce using rule 6 (stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .)
    IF              reduce using rule 6 (stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .)
    WHILE           reduce using rule 6 (stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .)
    RBRACE          reduce using rule 6 (stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON .)


state 92

    (12) stmt -> IF LPAREN expr RPAREN block ELSE block .

    VAR             reduce using rule 12 (stmt -> IF LPAREN expr RPAREN block ELSE block .)
    CONTINUE        reduce using rule 12 (stmt -> IF LPAREN expr RPAREN block ELSE block .)
    BREAK           reduce using rule 12 (stmt -> IF LPAREN expr RPAREN block ELSE block .)
    PRINT           reduce using rule 12 (stmt -> IF LPAREN expr RPAREN block ELSE block .)
    IDENT           reduce using rule 12 (stmt -> IF LPAREN expr RPAREN block ELSE block .)
    IF              reduce using rule 12 (stmt -> IF LPAREN expr RPAREN block ELSE block .)
    WHILE           reduce using rule 12 (stmt -> IF LPAREN expr RPAREN block ELSE block .)
    RBRACE          reduce using rule 12 (stmt -> IF LPAREN expr RPAREN block ELSE block .)

