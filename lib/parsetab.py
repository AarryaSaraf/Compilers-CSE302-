# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "programleftORORleftANDANDleftORleftXORleftANDnonassocEQUALSEQUALSNOTEQUALSnonassocLESSTHANLESSTHANEQUALSGREATERTHANGREATERTHANEQUALSleftLSHIFTRSHIFTleftPLUSMINUSleftTIMESDIVIDEMODrightTILDErightUMINUSBANGAND ANDAND BANG BREAK COLON COMMENT CONTINUE DEF DIVIDE ELSE EQUALS EQUALSEQUALS FALSE GREATERTHAN GREATERTHANEQUALS IDENT IF INT LBRACE LESSTHAN LESSTHANEQUALS LPAREN LSHIFT MAIN MINUS MOD NOTEQUALS NUMBER OR OROR PLUS PRINT RBRACE RPAREN RSHIFT SEMICOLON TILDE TIMES TRUE VAR WHILE XORprogram : DEF IDENT LPAREN RPAREN blockblock : LBRACE stmts RBRACEstmts : stmtstarstmtstar :\n    | stmtstar stmtstmt : VAR IDENT EQUALS expr COLON INT SEMICOLONstmt : CONTINUE SEMICOLONstmt : BREAK SEMICOLONstmt : PRINT LPAREN expr RPAREN SEMICOLONstmt : IDENT EQUALS expr SEMICOLON\n    stmt : IF LPAREN expr RPAREN block\n    stmt : IF LPAREN expr RPAREN block ELSE blockstmt : WHILE LPAREN expr RPAREN blockexpr : NUMBERexpr : TRUE\n    | FALSE\n    expr : IDENTexpr : TILDE expr\n    | MINUS expr %prec UMINUS\n    | BANG expr\n    expr : LPAREN expr RPARENexpr : expr ANDAND expr\n    | expr PLUS expr\n    | expr OROR expr\n    | expr MINUS expr\n    | expr TIMES expr\n    | expr DIVIDE expr\n    | expr EQUALSEQUALS expr\n    | expr MOD expr\n    | expr XOR expr\n    | expr AND expr\n    | expr OR expr\n    | expr LSHIFT expr\n    | expr RSHIFT expr\n    | expr LESSTHAN expr\n    | expr GREATERTHAN expr\n    | expr LESSTHANEQUALS expr\n    | expr GREATERTHANEQUALS expr\n    | expr NOTEQUALS expr\n    "

_lr_action_items = {
    "DEF": (
        [
            0,
        ],
        [
            2,
        ],
    ),
    "$end": (
        [
            1,
            6,
            10,
        ],
        [
            0,
            -1,
            -2,
        ],
    ),
    "IDENT": (
        [
            2,
            7,
            9,
            10,
            11,
            12,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            32,
            33,
            34,
            35,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            86,
            87,
            88,
            91,
            92,
        ],
        [
            3,
            -4,
            13,
            -2,
            -5,
            19,
            27,
            -7,
            -8,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            -10,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            -9,
            -11,
            -13,
            -6,
            -12,
        ],
    ),
    "LPAREN": (
        [
            3,
            16,
            17,
            18,
            20,
            23,
            24,
            25,
            26,
            32,
            33,
            34,
            35,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
        ],
        [
            4,
            23,
            24,
            25,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
        ],
    ),
    "RPAREN": (
        [
            4,
            27,
            29,
            30,
            31,
            36,
            37,
            38,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            5,
            -17,
            -14,
            -15,
            -16,
            63,
            64,
            65,
            -18,
            -19,
            -20,
            85,
            -22,
            -23,
            -24,
            -25,
            -26,
            -27,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -21,
        ],
    ),
    "LBRACE": (
        [
            5,
            64,
            65,
            90,
        ],
        [
            7,
            7,
            7,
            7,
        ],
    ),
    "VAR": (
        [
            7,
            9,
            10,
            11,
            21,
            22,
            40,
            86,
            87,
            88,
            91,
            92,
        ],
        [
            -4,
            12,
            -2,
            -5,
            -7,
            -8,
            -10,
            -9,
            -11,
            -13,
            -6,
            -12,
        ],
    ),
    "CONTINUE": (
        [
            7,
            9,
            10,
            11,
            21,
            22,
            40,
            86,
            87,
            88,
            91,
            92,
        ],
        [
            -4,
            14,
            -2,
            -5,
            -7,
            -8,
            -10,
            -9,
            -11,
            -13,
            -6,
            -12,
        ],
    ),
    "BREAK": (
        [
            7,
            9,
            10,
            11,
            21,
            22,
            40,
            86,
            87,
            88,
            91,
            92,
        ],
        [
            -4,
            15,
            -2,
            -5,
            -7,
            -8,
            -10,
            -9,
            -11,
            -13,
            -6,
            -12,
        ],
    ),
    "PRINT": (
        [
            7,
            9,
            10,
            11,
            21,
            22,
            40,
            86,
            87,
            88,
            91,
            92,
        ],
        [
            -4,
            16,
            -2,
            -5,
            -7,
            -8,
            -10,
            -9,
            -11,
            -13,
            -6,
            -12,
        ],
    ),
    "IF": (
        [
            7,
            9,
            10,
            11,
            21,
            22,
            40,
            86,
            87,
            88,
            91,
            92,
        ],
        [
            -4,
            17,
            -2,
            -5,
            -7,
            -8,
            -10,
            -9,
            -11,
            -13,
            -6,
            -12,
        ],
    ),
    "WHILE": (
        [
            7,
            9,
            10,
            11,
            21,
            22,
            40,
            86,
            87,
            88,
            91,
            92,
        ],
        [
            -4,
            18,
            -2,
            -5,
            -7,
            -8,
            -10,
            -9,
            -11,
            -13,
            -6,
            -12,
        ],
    ),
    "RBRACE": (
        [
            7,
            8,
            9,
            10,
            11,
            21,
            22,
            40,
            86,
            87,
            88,
            91,
            92,
        ],
        [
            -4,
            10,
            -3,
            -2,
            -5,
            -7,
            -8,
            -10,
            -9,
            -11,
            -13,
            -6,
            -12,
        ],
    ),
    "ELSE": (
        [
            10,
            87,
        ],
        [
            -2,
            90,
        ],
    ),
    "EQUALS": (
        [
            13,
            19,
        ],
        [
            20,
            26,
        ],
    ),
    "SEMICOLON": (
        [
            14,
            15,
            27,
            28,
            29,
            30,
            31,
            59,
            60,
            61,
            63,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            89,
        ],
        [
            21,
            22,
            -17,
            40,
            -14,
            -15,
            -16,
            -18,
            -19,
            -20,
            86,
            -22,
            -23,
            -24,
            -25,
            -26,
            -27,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -21,
            91,
        ],
    ),
    "NUMBER": (
        [
            20,
            23,
            24,
            25,
            26,
            32,
            33,
            34,
            35,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
        ],
        [
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
        ],
    ),
    "TRUE": (
        [
            20,
            23,
            24,
            25,
            26,
            32,
            33,
            34,
            35,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
        ],
        [
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
        ],
    ),
    "FALSE": (
        [
            20,
            23,
            24,
            25,
            26,
            32,
            33,
            34,
            35,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
        ],
        [
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
        ],
    ),
    "TILDE": (
        [
            20,
            23,
            24,
            25,
            26,
            32,
            33,
            34,
            35,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
        ],
        [
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
        ],
    ),
    "MINUS": (
        [
            20,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            33,
            33,
            33,
            33,
            33,
            -17,
            44,
            -14,
            -15,
            -16,
            33,
            33,
            33,
            33,
            44,
            44,
            44,
            44,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            -18,
            -19,
            -20,
            44,
            44,
            -23,
            44,
            -25,
            -26,
            -27,
            44,
            -29,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            -21,
        ],
    ),
    "BANG": (
        [
            20,
            23,
            24,
            25,
            26,
            32,
            33,
            34,
            35,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
        ],
        [
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
        ],
    ),
    "ANDAND": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            41,
            -14,
            -15,
            -16,
            41,
            41,
            41,
            41,
            -18,
            -19,
            -20,
            41,
            -22,
            -23,
            41,
            -25,
            -26,
            -27,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -21,
        ],
    ),
    "PLUS": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            42,
            -14,
            -15,
            -16,
            42,
            42,
            42,
            42,
            -18,
            -19,
            -20,
            42,
            42,
            -23,
            42,
            -25,
            -26,
            -27,
            42,
            -29,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            -21,
        ],
    ),
    "OROR": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            43,
            -14,
            -15,
            -16,
            43,
            43,
            43,
            43,
            -18,
            -19,
            -20,
            43,
            -22,
            -23,
            -24,
            -25,
            -26,
            -27,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -21,
        ],
    ),
    "TIMES": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            45,
            -14,
            -15,
            -16,
            45,
            45,
            45,
            45,
            -18,
            -19,
            -20,
            45,
            45,
            45,
            45,
            45,
            -26,
            -27,
            45,
            -29,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            -21,
        ],
    ),
    "DIVIDE": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            46,
            -14,
            -15,
            -16,
            46,
            46,
            46,
            46,
            -18,
            -19,
            -20,
            46,
            46,
            46,
            46,
            46,
            -26,
            -27,
            46,
            -29,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            -21,
        ],
    ),
    "EQUALSEQUALS": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            47,
            -14,
            -15,
            -16,
            47,
            47,
            47,
            47,
            -18,
            -19,
            -20,
            47,
            47,
            -23,
            47,
            -25,
            -26,
            -27,
            None,
            -29,
            47,
            47,
            47,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            None,
            -21,
        ],
    ),
    "MOD": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            48,
            -14,
            -15,
            -16,
            48,
            48,
            48,
            48,
            -18,
            -19,
            -20,
            48,
            48,
            48,
            48,
            48,
            -26,
            -27,
            48,
            -29,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            -21,
        ],
    ),
    "XOR": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            49,
            -14,
            -15,
            -16,
            49,
            49,
            49,
            49,
            -18,
            -19,
            -20,
            49,
            49,
            -23,
            49,
            -25,
            -26,
            -27,
            -28,
            -29,
            -30,
            -31,
            49,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -21,
        ],
    ),
    "AND": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            50,
            -14,
            -15,
            -16,
            50,
            50,
            50,
            50,
            -18,
            -19,
            -20,
            50,
            50,
            -23,
            50,
            -25,
            -26,
            -27,
            -28,
            -29,
            50,
            -31,
            50,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -21,
        ],
    ),
    "OR": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            51,
            -14,
            -15,
            -16,
            51,
            51,
            51,
            51,
            -18,
            -19,
            -20,
            51,
            51,
            -23,
            51,
            -25,
            -26,
            -27,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -21,
        ],
    ),
    "LSHIFT": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            52,
            -14,
            -15,
            -16,
            52,
            52,
            52,
            52,
            -18,
            -19,
            -20,
            52,
            52,
            -23,
            52,
            -25,
            -26,
            -27,
            52,
            -29,
            52,
            52,
            52,
            -33,
            -34,
            52,
            52,
            52,
            52,
            52,
            -21,
        ],
    ),
    "RSHIFT": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            53,
            -14,
            -15,
            -16,
            53,
            53,
            53,
            53,
            -18,
            -19,
            -20,
            53,
            53,
            -23,
            53,
            -25,
            -26,
            -27,
            53,
            -29,
            53,
            53,
            53,
            -33,
            -34,
            53,
            53,
            53,
            53,
            53,
            -21,
        ],
    ),
    "LESSTHAN": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            54,
            -14,
            -15,
            -16,
            54,
            54,
            54,
            54,
            -18,
            -19,
            -20,
            54,
            54,
            -23,
            54,
            -25,
            -26,
            -27,
            54,
            -29,
            54,
            54,
            54,
            -33,
            -34,
            None,
            None,
            None,
            None,
            54,
            -21,
        ],
    ),
    "GREATERTHAN": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            55,
            -14,
            -15,
            -16,
            55,
            55,
            55,
            55,
            -18,
            -19,
            -20,
            55,
            55,
            -23,
            55,
            -25,
            -26,
            -27,
            55,
            -29,
            55,
            55,
            55,
            -33,
            -34,
            None,
            None,
            None,
            None,
            55,
            -21,
        ],
    ),
    "LESSTHANEQUALS": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            56,
            -14,
            -15,
            -16,
            56,
            56,
            56,
            56,
            -18,
            -19,
            -20,
            56,
            56,
            -23,
            56,
            -25,
            -26,
            -27,
            56,
            -29,
            56,
            56,
            56,
            -33,
            -34,
            None,
            None,
            None,
            None,
            56,
            -21,
        ],
    ),
    "GREATERTHANEQUALS": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            57,
            -14,
            -15,
            -16,
            57,
            57,
            57,
            57,
            -18,
            -19,
            -20,
            57,
            57,
            -23,
            57,
            -25,
            -26,
            -27,
            57,
            -29,
            57,
            57,
            57,
            -33,
            -34,
            None,
            None,
            None,
            None,
            57,
            -21,
        ],
    ),
    "NOTEQUALS": (
        [
            27,
            28,
            29,
            30,
            31,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            58,
            -14,
            -15,
            -16,
            58,
            58,
            58,
            58,
            -18,
            -19,
            -20,
            58,
            58,
            -23,
            58,
            -25,
            -26,
            -27,
            None,
            -29,
            58,
            58,
            58,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            None,
            -21,
        ],
    ),
    "COLON": (
        [
            27,
            29,
            30,
            31,
            39,
            59,
            60,
            61,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
        ],
        [
            -17,
            -14,
            -15,
            -16,
            66,
            -18,
            -19,
            -20,
            -22,
            -23,
            -24,
            -25,
            -26,
            -27,
            -28,
            -29,
            -30,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -21,
        ],
    ),
    "INT": (
        [
            66,
        ],
        [
            89,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "program": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "block": (
        [
            5,
            64,
            65,
            90,
        ],
        [
            6,
            87,
            88,
            92,
        ],
    ),
    "stmts": (
        [
            7,
        ],
        [
            8,
        ],
    ),
    "stmtstar": (
        [
            7,
        ],
        [
            9,
        ],
    ),
    "stmt": (
        [
            9,
        ],
        [
            11,
        ],
    ),
    "expr": (
        [
            20,
            23,
            24,
            25,
            26,
            32,
            33,
            34,
            35,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
        ],
        [
            28,
            36,
            37,
            38,
            39,
            59,
            60,
            61,
            62,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> program", "S'", 1, None, None, None),
    (
        "program -> DEF IDENT LPAREN RPAREN block",
        "program",
        5,
        "p_program",
        "parser.py",
        24,
    ),
    ("block -> LBRACE stmts RBRACE", "block", 3, "p_block", "parser.py", 29),
    ("stmts -> stmtstar", "stmts", 1, "p_stmts", "parser.py", 34),
    ("stmtstar -> <empty>", "stmtstar", 0, "p_stmtstar", "parser.py", 39),
    ("stmtstar -> stmtstar stmt", "stmtstar", 2, "p_stmtstar", "parser.py", 40),
    (
        "stmt -> VAR IDENT EQUALS expr COLON INT SEMICOLON",
        "stmt",
        7,
        "p_stmt_vardecl",
        "parser.py",
        49,
    ),
    ("stmt -> CONTINUE SEMICOLON", "stmt", 2, "p_stmt_continue", "parser.py", 53),
    ("stmt -> BREAK SEMICOLON", "stmt", 2, "p_stmt_break", "parser.py", 57),
    (
        "stmt -> PRINT LPAREN expr RPAREN SEMICOLON",
        "stmt",
        5,
        "p_stmt_print",
        "parser.py",
        61,
    ),
    (
        "stmt -> IDENT EQUALS expr SEMICOLON",
        "stmt",
        4,
        "p_stmt_assign",
        "parser.py",
        66,
    ),
    (
        "stmt -> IF LPAREN expr RPAREN block",
        "stmt",
        5,
        "p_stmt_if_then",
        "parser.py",
        72,
    ),
    (
        "stmt -> IF LPAREN expr RPAREN block ELSE block",
        "stmt",
        7,
        "p_stmt_if_else",
        "parser.py",
        78,
    ),
    (
        "stmt -> WHILE LPAREN expr RPAREN block",
        "stmt",
        5,
        "p_stmt_while",
        "parser.py",
        83,
    ),
    ("expr -> NUMBER", "expr", 1, "p_expr_number", "parser.py", 88),
    ("expr -> TRUE", "expr", 1, "p_expr_bool", "parser.py", 92),
    ("expr -> FALSE", "expr", 1, "p_expr_bool", "parser.py", 93),
    ("expr -> IDENT", "expr", 1, "p_expr_ident", "parser.py", 100),
    ("expr -> TILDE expr", "expr", 2, "p_expr_unop", "parser.py", 107),
    ("expr -> MINUS expr", "expr", 2, "p_expr_unop", "parser.py", 108),
    ("expr -> BANG expr", "expr", 2, "p_expr_unop", "parser.py", 109),
    ("expr -> LPAREN expr RPAREN", "expr", 3, "p_expr_parens", "parser.py", 120),
    ("expr -> expr ANDAND expr", "expr", 3, "p_expr_binop", "parser.py", 124),
    ("expr -> expr PLUS expr", "expr", 3, "p_expr_binop", "parser.py", 125),
    ("expr -> expr OROR expr", "expr", 3, "p_expr_binop", "parser.py", 126),
    ("expr -> expr MINUS expr", "expr", 3, "p_expr_binop", "parser.py", 127),
    ("expr -> expr TIMES expr", "expr", 3, "p_expr_binop", "parser.py", 128),
    ("expr -> expr DIVIDE expr", "expr", 3, "p_expr_binop", "parser.py", 129),
    ("expr -> expr EQUALSEQUALS expr", "expr", 3, "p_expr_binop", "parser.py", 130),
    ("expr -> expr MOD expr", "expr", 3, "p_expr_binop", "parser.py", 131),
    ("expr -> expr XOR expr", "expr", 3, "p_expr_binop", "parser.py", 132),
    ("expr -> expr AND expr", "expr", 3, "p_expr_binop", "parser.py", 133),
    ("expr -> expr OR expr", "expr", 3, "p_expr_binop", "parser.py", 134),
    ("expr -> expr LSHIFT expr", "expr", 3, "p_expr_binop", "parser.py", 135),
    ("expr -> expr RSHIFT expr", "expr", 3, "p_expr_binop", "parser.py", 136),
    ("expr -> expr LESSTHAN expr", "expr", 3, "p_expr_binop", "parser.py", 137),
    ("expr -> expr GREATERTHAN expr", "expr", 3, "p_expr_binop", "parser.py", 138),
    ("expr -> expr LESSTHANEQUALS expr", "expr", 3, "p_expr_binop", "parser.py", 139),
    (
        "expr -> expr GREATERTHANEQUALS expr",
        "expr",
        3,
        "p_expr_binop",
        "parser.py",
        140,
    ),
    ("expr -> expr NOTEQUALS expr", "expr", 3, "p_expr_binop", "parser.py", 141),
]
